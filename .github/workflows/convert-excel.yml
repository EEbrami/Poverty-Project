name: Convert Excel Files

on:
  push:
    paths:
      - '**/*.xlsx'
  pull_request:
    paths:
      - '**/*.xlsx'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  convert-excel:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 2
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas openpyxl tabulate
    
    - name: Get changed Excel files
      id: changed-files
      run: |
        if [ "${{ github.event_name }}" = "push" ]; then
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD -- '*.xlsx' '**/*.xlsx' || echo "")
        elif [ "${{ github.event_name }}" = "pull_request" ]; then
          CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} HEAD -- '*.xlsx' '**/*.xlsx' || echo "")
        else
          CHANGED_FILES=$(find . -name "*.xlsx" -type f | grep -v "^./xlsxConverted/" || echo "")
        fi
        echo "Changed Excel files:"
        echo "$CHANGED_FILES"
        echo "files<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGED_FILES" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        if [ -n "$CHANGED_FILES" ]; then
          echo "has_changes=true" >> $GITHUB_OUTPUT
        else
          echo "has_changes=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Convert Excel files
      if: steps.changed-files.outputs.has_changes == 'true'
      run: |
        mkdir -p xlsxConverted xlsxConverted/mdFiles xlsxConverted/csvFiles xlsxConverted/jsonFiles
        echo "${{ steps.changed-files.outputs.files }}" | while IFS= read -r file; do
          if [ -n "$file" ] && [ -f "$file" ]; then
            echo "Converting: $file"
            python convert_excel.py --file "$file" --output xlsxConverted
          fi
        done
        # Move converted files to respective subfolders by extension
        find xlsxConverted -maxdepth 1 -type f -name "*.md" -exec mv -t xlsxConverted/mdFiles {} +
        find xlsxConverted -maxdepth 1 -type f -name "*.csv" -exec mv -t xlsxConverted/csvFiles {} +
        find xlsxConverted -maxdepth 1 -type f -name "*.json" -exec mv -t xlsxConverted/jsonFiles {} +
    
    - name: Check for converted files
      if: steps.changed-files.outputs.has_changes == 'true'
      id: check-converted
      run: |
        HAS_FILES=false
        for dir in xlsxConverted/mdFiles xlsxConverted/csvFiles xlsxConverted/jsonFiles; do
          if [ -d "$dir" ] && [ "$(ls -A $dir)" ]; then
            HAS_FILES=true
            echo "Found files in $dir:"
            find $dir -type f | head -20
          fi
        done
        if [ "$HAS_FILES" = "true" ]; then
          echo "has_converted_files=true" >> $GITHUB_OUTPUT
        else
          echo "has_converted_files=false" >> $GITHUB_OUTPUT
        fi

    - name: Commit and push converted files
      id: commit-push
      if: steps.check-converted.outputs.has_converted_files == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add xlsxConverted/
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          CONVERTED_COUNT=$(git diff --cached --name-only | wc -l)
          COMMIT_MSG="Automated file conversion for Excel files - Generated $CONVERTED_COUNT converted files in xlsxConverted (mdFiles, csvFiles, jsonFiles)"
          git commit -m "$COMMIT_MSG"
          git push
          echo "Successfully committed and pushed converted files"
        fi
    
    - name: Summary
      if: always()
      run: |
        if [ "${{ steps.changed-files.outputs.has_changes }}" = "true" ]; then
          echo "✅ Excel file scanning complete."
          if [ "${{ steps.commit-push.outcome }}" = "success" ]; then
            echo "✅ All required files were successfully converted, committed, and pushed."
          elif [ "${{ steps.commit-push.outcome }}" = "failure" ]; then
            echo "❌ CRITICAL FAILURE: Files were converted, but the commit/push FAILED. Check permissions or network errors (Exit code 128/403)."
          else
            echo "ℹ️ Conversion was attempted, but the final commit step was skipped or inconclusive."
          fi
        else
          echo "ℹ️ No Excel files were changed in this commit, conversion skipped."
        fi
