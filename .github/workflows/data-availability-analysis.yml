name: Data Availability Analysis

on:
  push:
    branches:
      - feature/**
    paths:
      - 'analysis/data-availability/**'
      - 'xlsxConverted/csvFiles/dart-med-pop_decomp-dhi.csv'
  workflow_dispatch:
    inputs:
      csv_path:
        description: 'Path to the input CSV file (relative to repo root)'
        default: 'xlsxConverted/csvFiles/dart-med-pop_decomp-dhi.csv'
        required: true
        type: string
      num_phases:
        description: 'Number of sequential exclusion phases to run'
        default: 15
        required: true
        type: number

jobs:
  run-analysis:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r analysis/data-availability/requirements.txt

      # NEW AND CORRECTED STEP: Dynamically set the output filename using Bash conditional logic.
      - name: Set dynamic path variables
        id: dynamic_vars
        run: |
          # The number of phases is passed as input only during workflow_dispatch.
          # For a 'push' trigger, this expression is empty, so we default to 15.
          PHASES_INPUT="${{ github.event.inputs.num_phases }}"
          DEFAULT_PHASES=15
          
          # Use standard Bash check: if the input string is empty, use the default.
          if [ -z "$PHASES_INPUT" ]; then
            PHASES=$DEFAULT_PHASES
          else
            PHASES=$PHASES_INPUT
          fi
          
          # The CSV file stem is hardcoded in the script's run.py default
          STEM="dart-med-pop_decomp-dhi"
          
          # Construct the output filename
          OUTPUT_FILENAME="ph${PHASES}_${STEM}.md"
          
          echo "PHASES=$PHASES" >> $GITHUB_ENV
          echo "OUTPUT_FILENAME=$OUTPUT_FILENAME" >> $GITHUB_ENV

      - name: Run analysis
        run: |
          # The script is run with arguments only when triggered manually via workflow_dispatch.
          # If triggered by 'push', github.event.inputs will be empty, and run.py will use its internal defaults.
          python analysis/data-availability/run.py \
            --csv-path ${{ github.event.inputs.csv_path }} \
            --num-phases ${{ github.event.inputs.num_phases }}

      - name: Commit results if changed
        run: |
          set -eux
          # Use the dynamically determined filename from the previous step
          FULL_PATH="analysis/data-availability/results/greedy_algorithm/${{ env.OUTPUT_FILENAME }}"
          
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # Now uses the dynamically calculated path (e.g., ph15_dart-med-pop_decomp-dhi.md)
          git add "${FULL_PATH}" || true
          
          if ! git diff --cached --quiet; then
            git commit -m "Analysis: update greedy coverage algorithm results"
            git push
          else
            echo "No changes to commit."
          fi
